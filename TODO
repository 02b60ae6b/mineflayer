Core:
 * handle double chests
 * handle specific metadata crafting
 * expose crafting and smelting recipes to API
 * dispenser is untested
 * furnace is untested
 * physics
   - slab
   - cake
   - stairs
   - ladders
   - doors
   - cacti
   - water
   - lava
   - ice
   - when you get punched, get knocked a small distance
   - mine cart
   - entity collisions

 * animate while digging
 * time tracking (day / night)
 * handler for onHeardNoteBlock(type, pitch, volume)
 * clean up stray chunks that didn't get unloaded
 * look at the protocol page and see if there is any data there that we're not
   exposing (e.g. entity equipment).
 * recalculte light on block changes
 * handle forced window close events from the server
 * mf.haveOpStatus and add an op/spawn check to canPlaceBlock

Bot framework:
 * refactor mf.blockHeight and friends into some kind of ItemData structure
 * implement the functions in doc/bot-api
 * metadata access for blocks
 * command line parameters
 * handle Ctrl+C

Libs:
 * high level inventory management
 * block_finder returns duplicate blocks
 * non-spoken chat interpretation (player joined, etc)

3D client:
 * chunk seams are broken
 * deleting chunks is broken
 * TOO SLOW
 * chatting 
 * digging
 * mobs/players/pickups
 * doors
 * torches and redstone torches
 * minecart tracks
 * ladders
 * stairs
 * levers
 * buttons
 * sign posts
 * wall signs
 * pressure plates
 * stone slab
 * cake
 * water/lava animation
 * water / lava flow
 * sky, sun, moon, day/night
 * clouds
