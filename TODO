Core:
 * handle double chests
 * handle specific metadata crafting
 * expose crafting and smelting recipes to API
 * dispenser is untested
 * furnace is untested
 * physics
   - partial blocks:
       - slab
       - cake
       - bed
       - stairs
       - ladders
       - doors
       - cacti
       - fences
   - climb ladders
   - swim & slow down in liquids: water, lava
   - less friction on ice
   - recoil when punched
   - vehicles: mine cart, boat, pig
   - entity collisions
   - fences

 * handler for onHeardNoteBlock(type, pitch, volume)
 * clean up stray chunks that didn't get unloaded (still a problem in 1.3?)
 * look at the protocol page and see if there is any data there that we're not
   exposing (e.g. entity equipment).
 * recalculte light on block changes
 * figure out when attached blocks fall off their host block (signs, torches, etc)
 * handle forced window close events from the server
 * mf.haveOpStatus and add an op/spawn check to canPlaceBlock
 * metadata for cake, repeater, bed, slab/doubleslab

Bot framework:
 * expose some kind of ItemData structure with bounding boxes and stuff
 * implement the functions in doc/bot-api
 * metadata access for blocks
 * command line parameters
 * handle Ctrl+C
 * document lib public functions better
 * looking doesn't sync with notchian clients correctly. try looking in smaller intervals at a time.

Libs:
 * fix high level inventory management
 * block_finder returns duplicate blocks
 * some kind of indexed search as faster alternative to current block_finder
 * drowning awareness

3D client:
 * chunk seams are broken
 * deleting chunks is broken
 * TOO SLOW
 * chatting 
 * digging
 * mobs/players/pickups
 * doors
 * torches and redstone torches
 * minecart tracks
 * ladders
 * stairs
 * levers
 * buttons
 * sign posts
 * wall signs
 * pressure plates
 * stone slab
 * cake
 * water/lava animation
 * water / lava flow
 * sky, sun, moon, day/night
 * clouds
