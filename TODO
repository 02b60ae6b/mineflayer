Core:
 * expose direct access to chunks in API
 * revert to notchian coordinate system :(

 * handle specific metadata crafting
 * expose crafting and smelting recipes to API
 * dispenser is untested
 * physics
   - partial blocks:
       - slab
       - cake
       - bed
       - stairs
       - ladder
       - door
       - cactus
       - fence
   - climb ladders
   - swim & slow down in liquids: water, lava
   - less friction on ice
   - recoil when punched
   - vehicles: mine cart, boat, pig
   - entity collisions

 * handler for onHeardNoteBlock(type, pitch, volume)
 * clean up stray chunks that didn't get unloaded (still a problem in latest
   version?)
 * look at the protocol page and see if there is any data there that we're not
   exposing (e.g. entity equipment).
 * recalculte light on block changes
 * figure out when attached blocks fall off their host block (signs, torches,
   etc.) (still a problem in latest version?)
 * handle forced window close events from the server
 * metadata for cake, repeater, bed, slab/doubleslab

Bot framework:
 * expose some kind of ItemData structure with bounding boxes and stuff
 * implement the functions in doc/bot-api
 * metadata access for blocks
 * handle Ctrl+C
 * document lib public functions better
 * allow shift=true in window clicks

JavaScript Libs:
 * fix high level inventory management
 * block_finder returns duplicate blocks
 * some kind of indexed search as faster alternative to current block_finder
 * drowning awareness

Tests that need to be written:
 * test authentication with minecraft.net
 * test for crafting every recipe
 * test for digging every diggable block
 * test aborting digging for every diggable block
 * test for navigator
 * test for block finder
 * tests for inventory management
 * test for file reading
 * test for player tracker
 * test for sending and receiving chat
 * test animation detection
 * test small chests, large chests, dispenser, furnace
 * test jumping up a block
 * test signs
 * test time of day
 * test sleeping in a bed
 * test health knowledge
 * test looking in a direction
 * test shooting an arrow
 * test killing an entity

